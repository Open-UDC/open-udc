IF(POLICY CMP0017)
  CMAKE_POLICY(SET CMP0017 OLD) # or even better, NEW
ENDIF(POLICY CMP0017)

SET(CMAKE_MODULE_PATH /usr/share/apps/cmake/modules)

INCLUDE(GpgmeFixMe.cmake OPTIONAL)

FIND_PACKAGE(Gpgme)

INCLUDE(CheckIncludeFile)
INCLUDE(CheckFunctionExists)

CHECK_INCLUDE_FILE(poll.h		HAVE_POLL_H)
CHECK_INCLUDE_FILE(sys/poll.h		HAVE_SYS_POLL_H)
CHECK_INCLUDE_FILE(sys/devpoll.h	HAVE_SYS_DEVPOLL_H)
CHECK_INCLUDE_FILE(sys/event.h		HAVE_SYS_EVENT_H)
CHECK_INCLUDE_FILE(dirent.h		HAVE_DIRENT_H)

CHECK_FUNCTION_EXISTS(kqueue HAVE_KQUEUE)
CHECK_FUNCTION_EXISTS(devpoll HAVE_DEVPOLL)
CHECK_FUNCTION_EXISTS(poll HAVE_POLL)
CHECK_FUNCTION_EXISTS(select HAVE_SELECT)

SET(HAVE_INT64T 1)
SET(HAVE_SOCKLENT 1)
SET(HAVE_ATOLL 1)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

ADD_DEFINITIONS(-DHAVE_DEFINES_H)
CONFIGURE_FILE(defines.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/defines.h)

ADD_CUSTOM_COMMAND(
  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/mime_encodings.h
  COMMAND awk -f ${CMAKE_CURRENT_SOURCE_DIR}/mime_txt2h.awk ${CMAKE_CURRENT_SOURCE_DIR}/mime_encodings.txt > ${CMAKE_CURRENT_BINARY_DIR}/mime_encodings.h
  )

ADD_CUSTOM_COMMAND(
  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/mime_types.h
  COMMAND awk -f ${CMAKE_CURRENT_SOURCE_DIR}/mime_txt2h.awk ${CMAKE_CURRENT_SOURCE_DIR}/mime_types.txt > ${CMAKE_CURRENT_BINARY_DIR}/mime_types.h
  )

LINK_LIBRARIES(
  #gpgme
  ${GPGME_VANILLA_LIBRARIES}
  #${GPGME_PTH_LIBRARIES}
  #${GPGME_PTHREAD_LIBRARIES}
  )

ADD_DEFINITIONS(-O2)
ADD_LIBRARY(match match.c)
ADD_EXECUTABLE(ludd thttpd.c libhttpd.c fdwatch.c mmc.c timers.c tdate_parse.c hkp.c mime_encodings.h mime_types.h)
TARGET_LINK_LIBRARIES(ludd match)

INSTALL(TARGETS ludd RUNTIME DESTINATION bin COMPONENT applications)

#ADD_SUBDIRECTORY(cgi-bin)
ADD_SUBDIRECTORY(cgi-src)
ADD_SUBDIRECTORY(pks)

EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CMAKE_CURRENT_SOURCE_DIR}/ludd_init.sh ${CMAKE_CURRENT_BINARY_DIR}/ludd_init.sh)

INSTALL(SCRIPT install.cmake)
